sudo: false
language: c++
install: true
cache: 
  apt: true
  directories:
    - $HOME/.deps
notifications:
  email: false
  slack:
    rooms:
      secure: 14/HK8RO8PzfznH7vmZwlfaOY0L2qqD21s+xyNfSRsayJGTIJV1lZrjSqGRpUSZm+ZZ+j0P/zB4QBXaJu077vTRYSQrudp85OTELSFNrBxWqBHokxDgL5tvXMZMa+0MPY/pd6h6dAgOgjku0QQNtYI9axASMseRDpOZX5unnRtE=
    on_success: change
    on_failure: always

matrix:
  include:
    - os: osx
      env: QF_ARCH=OSX
    - os: linux
      env: QF_ARCH=x86
      addons:
        apt:
          sources:
            - kubuntu-backports
          packages:
            - cmake
            - build-essential
            - gcc-multilib
    - os: linux
      env: QF_ARCH=x86_64
      addons:
        apt:
          sources:
            - kubuntu-backports
          packages:
            - cmake
            - build-essential
            - libopenal-dev
            - libjpeg8-dev
            - libvorbis-dev
            - libtheora-dev
            - libfreetype6-dev
            - zlib1g-dev
            - libcurl4-gnutls-dev
    - os: linux
      env: QF_ARCH=win32_x86
      addons:
        apt:
          sources:
            - kubuntu-backports
          packages:
            - cmake
            - binutils-mingw-w64-i686
            - binutils-mingw-w64-x86-64
            - gcc-mingw-w64-i686
            - gcc-mingw-w64-x86-64
            - gcc-mingw-w64
            - g++-mingw-w64-i686
            - g++-mingw-w64-x86-64
            - g++-mingw-w64
            - mingw-w64
    - os: linux
      env: QF_ARCH=win32_x86_64
      addons:
        apt:
          sources:
            - kubuntu-backports
          packages:
            - cmake
            - binutils-mingw-w64-i686
            - binutils-mingw-w64-x86-64
            - gcc-mingw-w64-i686
            - gcc-mingw-w64-x86-64
            - gcc-mingw-w64
            - g++-mingw-w64-i686
            - g++-mingw-w64-x86-64
            - g++-mingw-w64
            - mingw-w64

before_install:

install:
  - if [[ "$QF_ARCH" == "x86_64" ]] && [ ! -e "$HOME/.deps/$QF_ARCH/lib/pkgconfig/sdl2.pc" ]; then mkdir -p $HOME/.deps/$QF_ARCH && cd $HOME/.deps/$QF_ARCH && curl -O http://www.libsdl.org/release/SDL2-2.0.4.tar.gz && tar -xzvf SDL2-2.0.4.tar.gz && cd SDL2-2.0.4 && ./configure --prefix="$HOME/.deps/$QF_ARCH" && make && make install && cd .. && rm -rf SDL2-2.0.4 && cd "$TRAVIS_BUILD_DIR"; fi

script:
  - cd source
  - if [[ "$QF_ARCH" == "win32_x86" ]]; then cmake -DCMAKE_TOOLCHAIN_FILE=cmake/i686-mingw.cmake -DCMAKE_C_FLAGS=-m32 -DCMAKE_CXX_FLAGS=-m32 . && make -j2; fi
  - if [[ "$QF_ARCH" == "win32_x86_64" ]]; then cmake -DCMAKE_TOOLCHAIN_FILE=cmake/x86_64-mingw.cmake . && make -j2; fi
  - if [[ "$QF_ARCH" == "x86_64" ]]; then export SDL2DIR="$HOME/.deps/$QF_ARCH" && cmake . && make -j2; fi
  - if [[ "$QF_ARCH" == "x86" ]]; then cmake -DCMAKE_TOOLCHAIN_FILE=cmake/i386-linux-gnu.cmake -DGAME_MODULES_ONLY=1 . && make -j2 game cgame; fi
  - if [[ "$QF_ARCH" == "OSX" ]]; then cmake -G Xcode . && xcodebuild -project qfusion.xcodeproj/ -configuration Release -target ALL_BUILD; fi
